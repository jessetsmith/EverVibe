@using Microsoft.AspNet.Identity.EntityFramework
@using Microsoft.AspNet.Identity.Owin
@using System.Security.Principal
@using VibeSpace.Controllers
@using VibeSpace.Services
@model IEnumerable<VibeSpace.MODELS.VibeListItem>

        <section>
            <div class="container-fluid" id="page-wrapper">
                <div class="container-fluid" id="main">
                    <!-- <div class="container-fluid" id="content-wrapper">
                    <div class="container-fluid" id="content"> -->
                    <div class="border"></div>
                    <div class="scrolling-wrapper">
                        @{
                            foreach (var item in Model)
                            {
                                <div id="card-@item.VibeID.ToString()" class="card">
                                    @*@{
                                        VibeController controller = new VibeController();
                                        var userId = controller.GetUserId();
                                        var service = controller.CreateUserInfoService();
                                        var user = service.GetUsersByUserId(userId);
                                        var username = user.Username;

                                        if (Request.IsAuthenticated)
                                        {
                                            if(item.Username == username)
                                            {
                                                <span class="vibeIcons"><i class="fas fa-edit"></i><i class="fas fa-trash"></i></span>
                                            }

                                        }

                                    }*@

                                    <h3 id="cardName">@Html.ActionLink(item.Username, "PublicDetails", new { id = item.VibeID })@*<a id="userDetailLink" href="@Url.Action("PublicDetails", "UserInfo", )">@Html.DisplayFor(modelItem => item.Username)</a>*@ &nbsp;&nbsp;|&nbsp;&nbsp; @Html.DisplayFor(modelItem => item.Title)</h3>
                                    @{

                                    }
                                    <h4 style="margin-top:-.2em;margin-bottom:1em">@Html.DisplayFor(modelItem => item.Location)</h4>
                                    @{
                                        var image = item.Image;
                                        String img64 = Convert.ToBase64String(image);
                                        String img64Url = string.Format("data:image/" + "png" + ";base64,{0}", img64); //imagetype can be e.g. gif, jpeg, png etc.
                                    }
                                    <img src="@img64Url" class="vibeImage" height="350" width="400" @*style="border-radius:50%;*@ />
                                    <p id="vibeDescription">@Html.DisplayFor(modelItem => item.Description)</p>
                                    @*<ul>@Html.DisplayFor(modelItem => item.Tags.ToList())</ul>*@
                                </div>

                            }
                        }
                    </div>

                </div>
            </div>
        </section>

        @*}*@

        @*<p>
                @Html.ActionLink("Create New", "Create")
            </p>*@
